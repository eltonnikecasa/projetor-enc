name: Build Debian Package

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential devscripts debhelper dpkg jq curl

      - name: Set permissions
        run: |
          chmod +x usr/bin/projetor-enc
          chmod +x usr/local/bin/projetor-enc-wrapper
          chmod +x usr/sbin/epson-projector-cmd
          chmod +x debian/postinst
          chmod +x debian/prerm

      - name: Build .deb package
        run: |
          mkdir -p build/DEBIAN build/usr/bin build/usr/local/bin build/usr/sbin build/etc/systemd/system

          cp usr/bin/projetor-enc build/usr/bin/
          cp usr/local/bin/projetor-enc-wrapper build/usr/local/bin/
          cp usr/sbin/epson-projector-cmd build/usr/sbin/
          cp etc/systemd/system/projetor-enc.service build/etc/systemd/system/

          cp debian/control build/DEBIAN/
          cp debian/postinst build/DEBIAN/
          cp debian/prerm build/DEBIAN/

          chmod 755 build/usr/bin/projetor-enc
          chmod 755 build/usr/local/bin/projetor-enc-wrapper
          chmod 755 build/usr/sbin/epson-projector-cmd
          chmod 644 build/etc/systemd/system/projetor-enc.service
          chmod 755 build/DEBIAN/postinst
          chmod 755 build/DEBIAN/prerm

          dpkg-deb --build build projetor-enc.deb

      - name: List .deb file before upload
        run: ls -l projetor-enc.deb

      - name: Upload .deb to Release
        uses: softprops/action-gh-release@v2
        with:
          files: projetor-enc.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup old releases (keep only last 5)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          echo "Cleaning up old releases, keeping only 5 latest..."

          releases=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/releases?per_page=100" | jq -r '.[] | "\(.id) \(.created_at)"' | sort -rk2)

          count=0
          echo "$releases" | while read id date; do
            count=$((count+1))
            if [ $count -gt 5 ]; then
              echo "Deleting release ID $id created at $date"
              curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/$REPO/releases/$id"
            fi
          done
